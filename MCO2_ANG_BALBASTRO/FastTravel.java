/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mco2_ang_balbastro;

import javax.swing.JOptionPane;

/**
 * Displays the screen where an area could be selected.
 * 
 * @author ANG, JEREMIAH MAXWELL
 * @author BALBASTRO, LIANNE MAXENE
 * @version 2.0
 */
public class FastTravel extends javax.swing.JFrame {
    /**
     * The Player that chooses which area to go.
     */
    private Player CPlayer;
    
    /**
     * Sole constructor. 
     * 
     * Requires a Player to be passed to this FastTravel.
     * Creates new form FastTravel.
     */
    public FastTravel(Player CPlayer) {
        this.CPlayer = CPlayer;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bStormveil = new javax.swing.JButton();
        bRaya = new javax.swing.JButton();
        bElden = new javax.swing.JButton();
        labAstTrave = new javax.swing.JLabel();
        labF = new javax.swing.JLabel();
        labL = new javax.swing.JLabel();
        labBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(238, 233, 211));
        jPanel1.setForeground(new java.awt.Color(238, 233, 211));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 310, -1));

        bStormveil.setBackground(new java.awt.Color(238, 233, 211));
        bStormveil.setFont(new java.awt.Font("ROG Fonts", 0, 14)); // NOI18N
        bStormveil.setForeground(new java.awt.Color(93, 90, 74));
        bStormveil.setText("Stormveil Castle");
        bStormveil.setFocusable(false);
        bStormveil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bStormveilActionPerformed(evt);
            }
        });
        getContentPane().add(bStormveil, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, 240, 40));

        bRaya.setBackground(new java.awt.Color(238, 233, 211));
        bRaya.setFont(new java.awt.Font("ROG Fonts", 0, 14)); // NOI18N
        bRaya.setForeground(new java.awt.Color(93, 90, 74));
        bRaya.setText("Raya Lucaria");
        bRaya.setFocusable(false);
        bRaya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRayaActionPerformed(evt);
            }
        });
        getContentPane().add(bRaya, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 250, 240, 40));

        bElden.setBackground(new java.awt.Color(238, 233, 211));
        bElden.setFont(new java.awt.Font("ROG Fonts", 0, 14)); // NOI18N
        bElden.setForeground(new java.awt.Color(93, 90, 74));
        int clearedAreas[] = CPlayer.getClearedAreas();

        if (clearedAreas[0] == 0 && clearedAreas[1] == 0)
        bElden.setText("Elden Throne (LOCKED)");
        else bElden.setText("Elden Throne");
        bElden.setFocusable(false);
        bElden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEldenActionPerformed(evt);
            }
        });
        getContentPane().add(bElden, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 310, 240, 40));

        labAstTrave.setFont(new java.awt.Font("Serif", 1, 58)); // NOI18N
        labAstTrave.setForeground(new java.awt.Color(238, 233, 211));
        labAstTrave.setText("AST TRAVE");
        getContentPane().add(labAstTrave, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, -1, -1));

        labF.setFont(new java.awt.Font("Serif", 1, 78)); // NOI18N
        labF.setForeground(new java.awt.Color(238, 233, 211));
        labF.setText("F");
        getContentPane().add(labF, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, -1, -1));

        labL.setFont(new java.awt.Font("Serif", 1, 78)); // NOI18N
        labL.setForeground(new java.awt.Color(238, 233, 211));
        labL.setText("L");
        getContentPane().add(labL, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 80, -1, -1));

        labBackground.setFont(new java.awt.Font("ROG Fonts", 0, 12)); // NOI18N
        labBackground.setForeground(new java.awt.Color(93, 90, 74));
        labBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/FastTravel.jpg"))); // NOI18N
        getContentPane().add(labBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 828, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Opens the Stormveil Castle area and closes this FastTravel screen.
     * @param evt 
     */
    private void bStormveilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bStormveilActionPerformed
            new StormveilCastle(CPlayer).setVisible(true);
            this.dispose();
    }//GEN-LAST:event_bStormveilActionPerformed

    /**
     * Opens the Raya Lucaria area and closes this FastTravel screen.
     * @param evt 
     */
    private void bRayaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRayaActionPerformed
            new RayaLucaria(CPlayer).setVisible(true);
            this.dispose();   
    }//GEN-LAST:event_bRayaActionPerformed

    /**
     * Opens the Elden Throne area (if Areas 1 & 2 are cleared) and closes this FastTravel screen.
     * @param evt 
     */
    private void bEldenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEldenActionPerformed
        int clearedAreas[] = CPlayer.getClearedAreas();
        
        if(clearedAreas[0] == 1 && clearedAreas[1] == 1){
            new EldenThrone(CPlayer).setVisible(true);
            this.dispose(); 
        }
        
        else if (clearedAreas[0] == 0 && clearedAreas[1] == 1){
            JOptionPane.showMessageDialog(this, "You have to clear Stormveil Castle first!", 
            "Area is LOCKED", JOptionPane.ERROR_MESSAGE);
        }
        
        else if (clearedAreas[0] == 0 && clearedAreas[1] == 0){
            JOptionPane.showMessageDialog(this, "You have to clear Stormveil Castle and Raya Lucaria first!", 
            "Area is LOCKED", JOptionPane.ERROR_MESSAGE);
        }
        
        else if (clearedAreas[0] == 1 && clearedAreas[1] == 0){
            JOptionPane.showMessageDialog(this, "You have to clear Raya Lucaria first!", 
            "Area is LOCKED", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bEldenActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bElden;
    private javax.swing.JButton bRaya;
    private javax.swing.JButton bStormveil;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labAstTrave;
    private javax.swing.JLabel labBackground;
    private javax.swing.JLabel labF;
    private javax.swing.JLabel labL;
    // End of variables declaration//GEN-END:variables
}
