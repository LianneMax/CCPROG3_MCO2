/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package mco2_ang_balbastro;

import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.ImageIcon;


/**
 *
 * @author Lianne
 */
public class Inventory extends javax.swing.JFrame {
  
    private Player CPlayer;
    private ArrayList<Weapon> weapons = new ArrayList<>(); 
    private int selectedWeaponIndex = -1; 

/**
     * Creates new form Inventory
     */
    public Inventory(Player player) {
        initComponents();
        this.CPlayer = player;

        weapons = Weapon.initializeWeapons();
        assignWeaponActions();
        updateWeaponButtonsVisibility();
        
        this.selectedWeaponIndex = CPlayer.getEquippedWeaponIndex();
        displayWeaponDetails();
        
        if(selectedWeaponIndex > -1){
            equipWeapon(selectedWeaponIndex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SelectWeapon = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        MalikethsBlackBlade = new javax.swing.JButton();
        HoslowsPetalWhip = new javax.swing.JButton();
        ThornedWhip = new javax.swing.JButton();
        Urumi = new javax.swing.JButton();
        Whip = new javax.swing.JButton();
        HandofMalenia = new javax.swing.JButton();
        RiversofBlood = new javax.swing.JButton();
        Moonveil = new javax.swing.JButton();
        Uchigatana = new javax.swing.JButton();
        SwordofNightandFlame = new javax.swing.JButton();
        CodedSword = new javax.swing.JButton();
        RogiersRapier = new javax.swing.JButton();
        ShortSword = new javax.swing.JButton();
        Claymore = new javax.swing.JButton();
        StarscourgeGreatsword = new javax.swing.JButton();
        DragonCommunionSeal = new javax.swing.JButton();
        InseparableSword = new javax.swing.JButton();
        AstrologersStaff = new javax.swing.JButton();
        CarianRegalScepter = new javax.swing.JButton();
        AlbinauricStaff = new javax.swing.JButton();
        StaffoftheGuilty = new javax.swing.JButton();
        FingerSeal = new javax.swing.JButton();
        GodSlayersSeal = new javax.swing.JButton();
        GoldenOrderSeal = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        InfoStat = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SelectWeapon.setBackground(new java.awt.Color(136, 160, 139));
        SelectWeapon.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        SelectWeapon.setForeground(new java.awt.Color(255, 255, 255));
        SelectWeapon.setText("SELECT WEAPON");
        SelectWeapon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectWeaponActionPerformed(evt);
            }
        });
        getContentPane().add(SelectWeapon, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 620, 170, -1));

        Back.setBackground(new java.awt.Color(204, 130, 130));
        Back.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        Back.setForeground(new java.awt.Color(255, 255, 255));
        Back.setText("BACK");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        getContentPane().add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 660, 170, -1));

        MalikethsBlackBlade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/GreatSwords/Malikeths Black Blade.png"))); // NOI18N
        MalikethsBlackBlade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MalikethsBlackBladeActionPerformed(evt);
            }
        });
        getContentPane().add(MalikethsBlackBlade, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 180, 100, 140));

        HoslowsPetalWhip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Whips/Hoslows Petal Whip.png"))); // NOI18N
        HoslowsPetalWhip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HoslowsPetalWhipActionPerformed(evt);
            }
        });
        getContentPane().add(HoslowsPetalWhip, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 570, 100, 140));

        ThornedWhip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Whips/Thorned Whip.png"))); // NOI18N
        ThornedWhip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThornedWhipActionPerformed(evt);
            }
        });
        getContentPane().add(ThornedWhip, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 570, 100, 140));

        Urumi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Whips/Urumi.png"))); // NOI18N
        Urumi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UrumiActionPerformed(evt);
            }
        });
        getContentPane().add(Urumi, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 570, 100, 140));

        Whip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Whips/Whip.png"))); // NOI18N
        Whip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WhipActionPerformed(evt);
            }
        });
        getContentPane().add(Whip, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, 100, 140));

        HandofMalenia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Katanas/Hand of Malenia.png"))); // NOI18N
        HandofMalenia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HandofMaleniaActionPerformed(evt);
            }
        });
        getContentPane().add(HandofMalenia, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 380, 100, 140));

        RiversofBlood.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Katanas/Rivers of Blood.png"))); // NOI18N
        RiversofBlood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RiversofBloodActionPerformed(evt);
            }
        });
        getContentPane().add(RiversofBlood, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, 100, 140));

        Moonveil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Katanas/Moonveil.png"))); // NOI18N
        Moonveil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoonveilActionPerformed(evt);
            }
        });
        getContentPane().add(Moonveil, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, 100, 140));

        Uchigatana.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Katanas/Uchigatana.png"))); // NOI18N
        Uchigatana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UchigatanaActionPerformed(evt);
            }
        });
        getContentPane().add(Uchigatana, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 100, 140));

        SwordofNightandFlame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Swords/Sword of Night and Flame.png"))); // NOI18N
        SwordofNightandFlame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SwordofNightandFlameActionPerformed(evt);
            }
        });
        getContentPane().add(SwordofNightandFlame, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, 100, 140));

        CodedSword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Swords/Coded Sword.png"))); // NOI18N
        CodedSword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodedSwordActionPerformed(evt);
            }
        });
        getContentPane().add(CodedSword, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 100, 140));

        RogiersRapier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Swords/Rogiers Rapier.png"))); // NOI18N
        RogiersRapier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RogiersRapierActionPerformed(evt);
            }
        });
        getContentPane().add(RogiersRapier, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 100, 140));

        ShortSword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Swords/Short Sword.png"))); // NOI18N
        ShortSword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShortSwordActionPerformed(evt);
            }
        });
        getContentPane().add(ShortSword, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 100, 140));

        Claymore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/GreatSwords/Claymore.png"))); // NOI18N
        Claymore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClaymoreActionPerformed(evt);
            }
        });
        getContentPane().add(Claymore, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 180, 100, 140));

        StarscourgeGreatsword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/GreatSwords/Starscourge Greatsword.png"))); // NOI18N
        StarscourgeGreatsword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StarscourgeGreatswordActionPerformed(evt);
            }
        });
        getContentPane().add(StarscourgeGreatsword, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 180, 100, 140));

        DragonCommunionSeal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Seals/Dragon Communion Seal.png"))); // NOI18N
        DragonCommunionSeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DragonCommunionSealActionPerformed(evt);
            }
        });
        getContentPane().add(DragonCommunionSeal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 570, 100, 140));

        InseparableSword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/GreatSwords/Inseparable Sword.png"))); // NOI18N
        InseparableSword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InseparableSwordActionPerformed(evt);
            }
        });
        getContentPane().add(InseparableSword, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 180, 100, 140));

        AstrologersStaff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Staves/Astrologers Staff.png"))); // NOI18N
        AstrologersStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AstrologersStaffActionPerformed(evt);
            }
        });
        getContentPane().add(AstrologersStaff, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 380, 100, 140));

        CarianRegalScepter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Staves/Carian Regal Scepter.png"))); // NOI18N
        CarianRegalScepter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarianRegalScepterActionPerformed(evt);
            }
        });
        getContentPane().add(CarianRegalScepter, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 380, 100, 140));

        AlbinauricStaff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Staves/Albinauric Staff.png"))); // NOI18N
        AlbinauricStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlbinauricStaffActionPerformed(evt);
            }
        });
        getContentPane().add(AlbinauricStaff, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 380, 100, 140));

        StaffoftheGuilty.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Staves/Staff of the Guilty.png"))); // NOI18N
        StaffoftheGuilty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffoftheGuiltyActionPerformed(evt);
            }
        });
        getContentPane().add(StaffoftheGuilty, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 380, 100, 140));

        FingerSeal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Seals/Finger Seal.png"))); // NOI18N
        FingerSeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FingerSealActionPerformed(evt);
            }
        });
        getContentPane().add(FingerSeal, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 570, 100, 140));

        GodSlayersSeal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Seals/Godslayer Seal.png"))); // NOI18N
        GodSlayersSeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GodSlayersSealActionPerformed(evt);
            }
        });
        getContentPane().add(GodSlayersSeal, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 570, 100, 140));

        GoldenOrderSeal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Seals/Golden Order Seal.png"))); // NOI18N
        GoldenOrderSeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoldenOrderSealActionPerformed(evt);
            }
        });
        getContentPane().add(GoldenOrderSeal, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 570, 100, 140));

        jPanel1.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 160, 130, 10));

        jPanel3.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, 270, 10));

        jPanel4.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 170, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 350, 170, 10));

        jPanel5.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 170, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 170, 10));

        jPanel6.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 540, 180, 10));

        jPanel7.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 160, 10));

        jPanel8.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 540, 180, 10));

        jPanel9.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 170, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, 170, 10));

        jPanel10.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 160, 120, 10));

        jPanel11.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 350, 160, 10));

        jPanel12.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 540, 180, 10));

        jPanel13.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 170, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 350, 170, 10));

        jPanel14.setBackground(new java.awt.Color(126, 150, 153));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 540, 180, 10));

        InfoStat.setEditable(false);
        InfoStat.setBackground(new java.awt.Color(126, 150, 153));
        InfoStat.setColumns(20);
        InfoStat.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        InfoStat.setRows(5);
        getContentPane().add(InfoStat, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 160, 210, 220));

        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(126, 150, 153)));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 440, 100, 140));

        jLabel9.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(126, 150, 153));
        jLabel9.setText("CURRENT WEAPON EQUIPPED");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 420, 200, -1));

        jLabel12.setBackground(new java.awt.Color(39, 59, 63));
        jLabel12.setFont(new java.awt.Font("ROG Fonts", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(126, 150, 153));
        jLabel12.setText("SEALS");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 530, 80, -1));

        jLabel11.setBackground(new java.awt.Color(39, 59, 63));
        jLabel11.setFont(new java.awt.Font("ROG Fonts", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(126, 150, 153));
        jLabel11.setText("STAVES");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 340, 100, -1));

        jLabel10.setBackground(new java.awt.Color(39, 59, 63));
        jLabel10.setFont(new java.awt.Font("ROG Fonts", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(126, 150, 153));
        jLabel10.setText("GREATSWORDS");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 150, 190, -1));

        jLabel8.setBackground(new java.awt.Color(39, 59, 63));
        jLabel8.setFont(new java.awt.Font("ROG Fonts", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(126, 150, 153));
        jLabel8.setText("WHIPS");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 530, 80, -1));

        jLabel7.setBackground(new java.awt.Color(39, 59, 63));
        jLabel7.setFont(new java.awt.Font("ROG Fonts", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(126, 150, 153));
        jLabel7.setText("KATANAS");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, 120, -1));

        jLabel6.setBackground(new java.awt.Color(39, 59, 63));
        jLabel6.setFont(new java.awt.Font("ROG Fonts", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(126, 150, 153));
        jLabel6.setText("SWORDS");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 100, -1));

        jLabel5.setFont(new java.awt.Font("Serif", 1, 78)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(126, 150, 153));
        jLabel5.setText("Y");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 30, 60, -1));

        jLabel4.setFont(new java.awt.Font("Serif", 1, 79)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(126, 150, 153));
        jLabel4.setText("I");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 30, -1, -1));

        jLabel3.setBackground(new java.awt.Color(39, 59, 63));
        jLabel3.setFont(new java.awt.Font("Serif", 1, 58)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(126, 150, 153));
        jLabel3.setText("NVENTOR");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 40, -1, -1));

        jLabel1.setBackground(new java.awt.Color(238, 233, 211));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mco2_ang_balbastro/Backgrounds/Inventory.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1230, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents


private void assignWeaponActions() {
        ShortSword.addActionListener(evt -> selectWeapon(0));
        RogiersRapier.addActionListener(evt -> selectWeapon(1));
        CodedSword.addActionListener(evt -> selectWeapon(2));
        SwordofNightandFlame.addActionListener(evt -> selectWeapon(3));
        Uchigatana.addActionListener(evt -> selectWeapon(4));
        Moonveil.addActionListener(evt -> selectWeapon(5));
        RiversofBlood.addActionListener(evt -> selectWeapon(6));
        HandofMalenia.addActionListener(evt -> selectWeapon(7));
        Whip.addActionListener(evt -> selectWeapon(8));
        Urumi.addActionListener(evt -> selectWeapon(9));
        ThornedWhip.addActionListener(evt -> selectWeapon(10));
        HoslowsPetalWhip.addActionListener(evt -> selectWeapon(11));
        Claymore.addActionListener(evt -> selectWeapon(12));
        StarscourgeGreatsword.addActionListener(evt -> selectWeapon(13));
        InseparableSword.addActionListener(evt -> selectWeapon(14));
        MalikethsBlackBlade.addActionListener(evt -> selectWeapon(15));
        AstrologersStaff.addActionListener(evt -> selectWeapon(16));
        AlbinauricStaff.addActionListener(evt -> selectWeapon(17));
        StaffoftheGuilty.addActionListener(evt -> selectWeapon(18));
        CarianRegalScepter.addActionListener(evt -> selectWeapon(19));
        FingerSeal.addActionListener(evt -> selectWeapon(20));
        GodSlayersSeal.addActionListener(evt -> selectWeapon(21));
        GoldenOrderSeal.addActionListener(evt -> selectWeapon(22));
        DragonCommunionSeal.addActionListener(evt -> selectWeapon(23));
}

    private void updateWeaponButtonsVisibility() {
        javax.swing.JButton[] weaponButtons = {
            ShortSword, RogiersRapier, CodedSword, SwordofNightandFlame,
            Uchigatana, Moonveil, RiversofBlood, HandofMalenia, Whip,
            Urumi, ThornedWhip, HoslowsPetalWhip, Claymore, StarscourgeGreatsword,
            InseparableSword, MalikethsBlackBlade, AstrologersStaff, AlbinauricStaff,
            StaffoftheGuilty, CarianRegalScepter, FingerSeal, GodSlayersSeal,
            GoldenOrderSeal, DragonCommunionSeal
        };

        for (int i = 0; i < weaponButtons.length; i++) {
            if (CPlayer.isWeaponOwned(i)) {
                weaponButtons[i].setVisible(true);
            } else {
                weaponButtons[i].setVisible(false);
            }
        }
    }
    
    private void selectWeapon(int index) {
        selectedWeaponIndex = index;
        displayWeaponDetails();
    }
    
    private String getWeaponImagePath(int index) {
    
    String[] paths = {
        "/mco1_ang_balbastro/Backgrounds/Swords/Short Sword.png", // 0. Short Sword
        "/mco1_ang_balbastro/Backgrounds/Swords/Rogiers Rapier.png", // 1. Rogier's Rapier
        "/mco1_ang_balbastro/Backgrounds/Swords/Coded Sword.png", // 2. Coded Sword
        "/mco1_ang_balbastro/Backgrounds/Swords/Sword of Night and Flame.png", // 3. Sword of Night and Flame
        "/mco1_ang_balbastro/Backgrounds/Katanas/Uchigatana.png", // 4. Uchigatana
        "/mco1_ang_balbastro/Backgrounds/Katanas/Moonveil.png", // 5. Moonveil
        "/mco1_ang_balbastro/Backgrounds/Katanas/Rivers of Blood.png", // 6. Rivers of Blood
        "/mco1_ang_balbastro/Backgrounds/Katanas/Hand of Malenia.png", // 7. Hand of Malenia
        "/mco1_ang_balbastro/Backgrounds/Whips/Whip.png", // 8. Whip
        "/mco1_ang_balbastro/Backgrounds/Whips/Urumi.png", // 9. Urumi
        "/mco1_ang_balbastro/Backgrounds/Whips/Thorned Whip.png", // 10. Thorned Whip
        "/mco1_ang_balbastro/Backgrounds/Whips/Hoslows Petal Whip.png", // 11. Hoslows Petal Whip
        "/mco1_ang_balbastro/Backgrounds/GreatSwords/Claymore.png", // 12. Claymore
        "/mco1_ang_balbastro/Backgrounds/GreatSwords/Starscourge Greatsword.png", // 13. Starscourge Greatsword
        "/mco1_ang_balbastro/Backgrounds/GreatSwords/Inseparable Sword.png", // 14. Inseparable Sword
        "/mco1_ang_balbastro/Backgrounds/GreatSwords/Malikeths Black Blade.png", // 15. Malikeths Black Blade
        "/mco1_ang_balbastro/Backgrounds/Staves/Astrologers Staff.png", // 16. Astrologer's Staff
        "/mco1_ang_balbastro/Backgrounds/Staves/Albinauric Staff.png", // 17. Albinauric Staff
        "/mco1_ang_balbastro/Backgrounds/Staves/Staff of the Guilty.png", // 18. Staff of the Guilty
        "/mco1_ang_balbastro/Backgrounds/Staves/Carian Regal Scepter.png", // 19. Carian Regal Scepter
        "/mco1_ang_balbastro/Backgrounds/Seals/Finger Seal.png", // 20. Finger Seal
        "/mco1_ang_balbastro/Backgrounds/Seals/Godslayer Seal.png", // 21. Godslayer's Seal
        "/mco1_ang_balbastro/Backgrounds/Seals/Golden Order Seal.png", // 22. Golden Order Seal
        "/mco1_ang_balbastro/Backgrounds/Seals/Dragon Communion Seal.png" // 23. Dragon Communion Seal
    };

    if (index >= 0 && index < paths.length) {
        return paths[index];
    } else {
        return null; // Return null or a default path if index is out of bounds
    }
}

    private void displayWeaponDetails() {
        if (selectedWeaponIndex >= 0) {
            Weapon weapon = weapons.get(selectedWeaponIndex);
            boolean isOwned = CPlayer.isWeaponOwned(selectedWeaponIndex);
            weapon.setOwned(isOwned);
            InfoStat.setText(weapon.getDetails(weapons));
           
        }
    }
    
    private void equipWeapon(int weaponIndex) {
    if (CPlayer.isWeaponOwned(weaponIndex)) {
        Weapon weaponToEquip = weapons.get(weaponIndex);
        CPlayer.setEquippedWeaponIndex(weaponIndex);
        
            ImageIcon icon = new ImageIcon(getClass().getResource(getWeaponImagePath(selectedWeaponIndex)));
            jLabel2.setIcon(icon);
    } else {
        JOptionPane.showMessageDialog(this, "You do not own this weapon.", "Equip Failed", JOptionPane.ERROR_MESSAGE);
    }
}
     
    private void SelectWeaponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectWeaponActionPerformed

    if (selectedWeaponIndex >= 0) {
        Weapon selectedWeapon = weapons.get(selectedWeaponIndex);
        boolean isOwned = CPlayer.isWeaponOwned(selectedWeaponIndex);

        if (CPlayer.getDexterity() >= selectedWeapon.getDexterity()) {

            CPlayer.setEquippedWeaponIndex(selectedWeaponIndex);
            equipWeapon(selectedWeaponIndex);
            JOptionPane.showMessageDialog(this, "Weapon equipped successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            
        } else {
            JOptionPane.showMessageDialog(this, "Insufficient dexterity to equip this weapon.", "Equip Failed", JOptionPane.ERROR_MESSAGE);
        }
        
        displayWeaponDetails();
    } else {
        JOptionPane.showMessageDialog(this, "No weapon selected.", "Warning", JOptionPane.WARNING_MESSAGE);
    }
    
    }//GEN-LAST:event_SelectWeaponActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        java.awt.EventQueue.invokeLater(() -> {
            new GameLobby(CPlayer).setVisible(true);
            this.dispose();
        });
    }//GEN-LAST:event_BackActionPerformed

    private void ShortSwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShortSwordActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_ShortSwordActionPerformed

    private void RogiersRapierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RogiersRapierActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_RogiersRapierActionPerformed

    private void CodedSwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodedSwordActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_CodedSwordActionPerformed

    private void SwordofNightandFlameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SwordofNightandFlameActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_SwordofNightandFlameActionPerformed

    private void UchigatanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UchigatanaActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_UchigatanaActionPerformed

    private void MoonveilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoonveilActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_MoonveilActionPerformed

    private void RiversofBloodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RiversofBloodActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_RiversofBloodActionPerformed

    private void HandofMaleniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HandofMaleniaActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_HandofMaleniaActionPerformed

    private void WhipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WhipActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_WhipActionPerformed

    private void UrumiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UrumiActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_UrumiActionPerformed

    private void ThornedWhipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThornedWhipActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_ThornedWhipActionPerformed

    private void HoslowsPetalWhipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HoslowsPetalWhipActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_HoslowsPetalWhipActionPerformed

    private void MalikethsBlackBladeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MalikethsBlackBladeActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_MalikethsBlackBladeActionPerformed

    private void ClaymoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClaymoreActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_ClaymoreActionPerformed

    private void StarscourgeGreatswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StarscourgeGreatswordActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_StarscourgeGreatswordActionPerformed

    private void InseparableSwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InseparableSwordActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_InseparableSwordActionPerformed

    private void DragonCommunionSealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DragonCommunionSealActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_DragonCommunionSealActionPerformed

    private void AstrologersStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AstrologersStaffActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_AstrologersStaffActionPerformed

    private void CarianRegalScepterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarianRegalScepterActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_CarianRegalScepterActionPerformed

    private void AlbinauricStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlbinauricStaffActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_AlbinauricStaffActionPerformed

    private void StaffoftheGuiltyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffoftheGuiltyActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_StaffoftheGuiltyActionPerformed

    private void FingerSealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FingerSealActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_FingerSealActionPerformed

    private void GodSlayersSealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GodSlayersSealActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_GodSlayersSealActionPerformed

    private void GoldenOrderSealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoldenOrderSealActionPerformed
        displayWeaponDetails();
    }//GEN-LAST:event_GoldenOrderSealActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AlbinauricStaff;
    private javax.swing.JButton AstrologersStaff;
    private javax.swing.JButton Back;
    private javax.swing.JButton CarianRegalScepter;
    private javax.swing.JButton Claymore;
    private javax.swing.JButton CodedSword;
    private javax.swing.JButton DragonCommunionSeal;
    private javax.swing.JButton FingerSeal;
    private javax.swing.JButton GodSlayersSeal;
    private javax.swing.JButton GoldenOrderSeal;
    private javax.swing.JButton HandofMalenia;
    private javax.swing.JButton HoslowsPetalWhip;
    private javax.swing.JTextArea InfoStat;
    private javax.swing.JButton InseparableSword;
    private javax.swing.JButton MalikethsBlackBlade;
    private javax.swing.JButton Moonveil;
    private javax.swing.JButton RiversofBlood;
    private javax.swing.JButton RogiersRapier;
    private javax.swing.JButton SelectWeapon;
    private javax.swing.JButton ShortSword;
    private javax.swing.JButton StaffoftheGuilty;
    private javax.swing.JButton StarscourgeGreatsword;
    private javax.swing.JButton SwordofNightandFlame;
    private javax.swing.JButton ThornedWhip;
    private javax.swing.JButton Uchigatana;
    private javax.swing.JButton Urumi;
    private javax.swing.JButton Whip;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    // End of variables declaration//GEN-END:variables


}
